{"version":3,"sources":["util/AuthRoute.js","components/Nav/Nav.js","components/Home/Home.js","components/Login/Login.js","components/Signup/Signup.js","components/Chat/Chat.js","components/Input/Input.jsx","components/Message/Message.js","components/Messages/Messages.jsx","App.js","index.js"],"names":["AuthRoute","Component","component","isAuthenticated","rest","render","props","to","useStyles","makeStyles","theme","root","flexGrow","zIndex","menuButton","marginRight","spacing","title","ButtonAppBar","classes","useContext","UserContext","user","setUser","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","logOut","a","fetch","method","credentials","headers","authorization","accesstoken","history","push","className","CssBaseline","AppBar","position","Toolbar","Box","style","textDecoration","color","Typography","variant","Avatar","alt","aria-controls","aria-haspopup","onClick","event","currentTarget","src","profilePhoto","Menu","id","keepMounted","onClose","TransitionComponent","Fade","top","MenuItem","box","Button","display","appBar","drawer","backgroundColor","width","flexShrink","drawerPaper","drawerContainer","overflow","content","height","padding","enterRoom","Home","room","setRoom","Divider","Drawer","paper","List","ListItem","align","gutterBottom","paragraph","FormControl","fullWidth","inputProps","TextField","margin","required","value","label","name","autoFocus","onChange","target","e","username","preventDefault","image","backgroundImage","backgroundRepeat","palette","type","grey","backgroundSize","backgroundPosition","flexDirection","alignItems","avatar","secondary","main","form","marginTop","submit","root2","Login","logingError","setLogingError","useEffect","validationSchema","Yup","email","lowercase","password","min","onSubmit","values","resetForm","crossDomain","withCredentials","xhrFields","mode","body","JSON","stringify","json","userCredential","console","log","jwtDecode","error","Grid","container","item","xs","sm","md","Hidden","xsDown","Paper","elevation","square","initialValues","validateOnChange","validateOnBlur","touched","errors","handleChange","handleBlur","Alert","severity","onBlur","FormHelperText","autoComplete","FormControlLabel","control","Checkbox","href","Signup","matches","trim","max","success","socket","Input","message","setMessage","sendMessage","placeholder","onKeyPress","key","mc","justifyContent","mb","borderRadius","maxWidth","background","mt","letterSpacing","fontSize","wordWrap","paddingLeft","mc2","mc3","Message","ruser","text","isSentByCurrentUser","ReactEmoji","emojify","Messages","messages","map","i","outline","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","hide","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","mixins","heigth","inputArea","Chat","location","setName","users","setUsers","setMessages","queryString","parse","search","io","emit","alert","off","on","useTheme","setOpen","clsx","IconButton","aria-label","edge","noWrap","direction","index","button","ListItemIcon","ListItemText","primary","createContext","App","loading","setLoading","getRefreshToken","Provider","path","Nav","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8b86ccf7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst AuthRoute = ({ component: Component, isAuthenticated, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      isAuthenticated === true ? <Component {...props} /> : <Redirect to=\"/\" />\r\n    }\r\n  />\r\n);\r\n\r\nexport default AuthRoute;\r\n","import React, { useContext, useState } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    zIndex: +100,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar(props) {\r\n  const classes = useStyles();\r\n  const [user, setUser] = useContext(UserContext);\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const logOut = async () => {\r\n    await fetch(\"http://localhost:8000/api/user/logout\", {\r\n      method: \"POST\",\r\n      credentials: \"include\", // Needed to include the cookie\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: `Bearer ${user.accesstoken}`,\r\n      },\r\n    });\r\n    setAnchorEl(null);\r\n    setUser({});\r\n    props.history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Box className={classes.title}>\r\n            <Link\r\n              to={\"/Home\"}\r\n              style={{ textDecoration: \"none\", color: \"white\" }}\r\n            >\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                Home\r\n              </Typography>\r\n            </Link>\r\n          </Box>\r\n\r\n          {user.isAuthenticated === true ? (\r\n            <Box>\r\n              <Link>\r\n                <Avatar\r\n                  alt=\"Remy Sharp\"\r\n                  aria-controls=\"fade-menu\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleClick}\r\n                  src={user.profilePhoto}\r\n                />\r\n\r\n                <Menu\r\n                  id=\"fade-menu\"\r\n                  anchorEl={anchorEl}\r\n                  keepMounted\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                  TransitionComponent={Fade}\r\n                  style={{ top: \"50px\" }}\r\n                >\r\n                  <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                  <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                  <MenuItem onClick={logOut}>Logout</MenuItem>\r\n                </Menu>\r\n              </Link>\r\n            </Box>\r\n          ) : (\r\n            <Box className={classes.box}>\r\n              <Link\r\n                to={\"/login\"}\r\n                style={{ textDecoration: \"none\", color: \"white\" }}\r\n              >\r\n                <Button color=\"inherit\">Login</Button>\r\n              </Link>\r\n            </Box>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    backgroundColor: \"#2b2e4a\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    zIndex: -1,\r\n    backgroundColor: \"#2b2e4a\",\r\n  },\r\n  drawerContainer: {\r\n    overflow: \"auto\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    padding: theme.spacing(3),\r\n    backgroundColor: \"#384259\",\r\n  },\r\n  enterRoom: {\r\n    backgroundColor: \"#384259\",\r\n  },\r\n}));\r\n\r\nexport default function Home() {\r\n  const [user, setUser] = useContext(UserContext);\r\n  const [room, setRoom] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Divider />\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <div className={classes.drawerContainer}>\r\n          <List>\r\n            <ListItem>\r\n              <Typography>recent</Typography>\r\n            </ListItem>\r\n          </List>\r\n          <Divider />\r\n        </div>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <Toolbar />\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h1\"\r\n          align=\"center\"\r\n          gutterBottom\r\n          style={{ color: \"#dbe2ef\" }}\r\n        >\r\n          A Very Simple Chat Application\r\n        </Typography>\r\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n          Developed by : sizarcorpse\r\n        </Typography>\r\n        <FormControl fullWidth inputProps={{ className: classes.enterRoom }}>\r\n          <TextField\r\n            inputProps={{ className: classes.enterRoom }}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            id=\"room\"\r\n            value={room}\r\n            label=\"Enter A Room Name\"\r\n            name=\"room\"\r\n            autoFocus\r\n            onChange={(event) => setRoom(event.target.value)}\r\n          />\r\n        </FormControl>\r\n        <Link\r\n          onClick={(e) => (!user.username || !room ? e.preventDefault() : null)}\r\n          to={`/chat?name=${user.username}&room=${room}`}\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          <Button variant=\"outlined\" color=\"primary\" fullWidth>\r\n            Join\r\n          </Button>\r\n        </Link>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\n\r\nimport { UserContext } from \"../../App\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  root2: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Login(props) {\r\n  const [user, setUser] = useContext(UserContext);\r\n  const [logingError, setLogingError] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (user.isAuthenticated === true) {\r\n      props.history.push(\"/home\");\r\n    }\r\n  }, []);\r\n\r\n  const initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    email: Yup.string()\r\n      .email(\"Please Enter A Valid Email\")\r\n      .lowercase()\r\n      .required(\"Email Can Not Be Empty\"),\r\n    password: Yup.string().min(8),\r\n  });\r\n\r\n  const onSubmit = async (values, { resetForm }) => {\r\n    const { email, password } = values;\r\n\r\n    const userCredential = await (\r\n      await fetch(\"http://localhost:8000/api/user/login\", {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        crossDomain: true,\r\n        withCredentials: true,\r\n        xhrFields: { withCredentials: true },\r\n        mode: \"cors\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          \"Access-Control-Allow-Credentials\": true,\r\n        },\r\n        body: JSON.stringify({\r\n          email,\r\n          password,\r\n        }),\r\n      })\r\n    ).json();\r\n    console.log(userCredential);\r\n    if (userCredential.accesstoken) {\r\n      const { username, email, profilePhoto } = jwtDecode(\r\n        userCredential.accesstoken\r\n      );\r\n\r\n      setUser({\r\n        accesstoken: userCredential.accesstoken,\r\n        isAuthenticated: true,\r\n        username: username,\r\n        email: email,\r\n        profilePhoto: profilePhoto,\r\n      });\r\n      props.history.push(\"/home\");\r\n    } else {\r\n      setLogingError(userCredential.error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      {user.isAuthenticated === true ? (\r\n        props.history.push(\"/home\")\r\n      ) : (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n          <CssBaseline />\r\n          <Grid item xs={false} sm={4} md={7} className={classes.image}>\r\n            <Hidden xsDown>\r\n              <Typography\r\n                component=\"h1\"\r\n                variant=\"h1\"\r\n                align=\"center\"\r\n                gutterBottom\r\n                style={{ marginTop: \"20vh\", color: \"#222831\" }}\r\n              >\r\n                A Very Simple Chat Application\r\n              </Typography>\r\n              <Typography\r\n                variant=\"h5\"\r\n                align=\"center\"\r\n                color=\"textSecondary\"\r\n                paragraph\r\n              >\r\n                Something short and leading about the application below—its\r\n                contents, the creator, etc. Make it short and sweet, but not too\r\n                short so folks don&apos;t simply skip over it entirely.\r\n              </Typography>\r\n              <Typography\r\n                variant=\"h5\"\r\n                align=\"center\"\r\n                color=\"textSecondary\"\r\n                paragraph\r\n              >\r\n                Developed by : sizarcorpse\r\n              </Typography>\r\n            </Hidden>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={8}\r\n            md={5}\r\n            component={Paper}\r\n            elevation={6}\r\n            square\r\n          >\r\n            <div className={classes.paper}>\r\n              <Avatar className={classes.avatar}>\r\n                <LockOutlinedIcon />\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in\r\n              </Typography>\r\n              <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={onSubmit}\r\n                validateOnChange={false}\r\n                validateOnBlur={false}\r\n              >\r\n                {(props) => {\r\n                  const {\r\n                    values,\r\n                    touched,\r\n                    errors,\r\n                    handleChange,\r\n                    handleBlur,\r\n                  } = props;\r\n                  return (\r\n                    <Form className={classes.form}>\r\n                      {logingError && (\r\n                        <div className={classes.root2}>\r\n                          <Alert severity=\"error\">{logingError}</Alert>\r\n                        </div>\r\n                      )}\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={12}>\r\n                          <FormControl\r\n                            error={touched.email && Boolean(errors.email)}\r\n                            fullWidth\r\n                          >\r\n                            <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"normal\"\r\n                              required\r\n                              id=\"email\"\r\n                              value={values.email}\r\n                              label=\"Email Address\"\r\n                              name=\"email\"\r\n                              /* autoComplete=\"email\" */\r\n                              autoFocus\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              fullWidth\r\n                            />\r\n                            <FormHelperText id=\"component-error-text\">\r\n                              {touched.email ? errors.email : \"\"}\r\n                            </FormHelperText>\r\n                          </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                          <FormControl\r\n                            error={touched.password && Boolean(errors.password)}\r\n                            fullWidth\r\n                          >\r\n                            <TextField\r\n                              variant=\"outlined\"\r\n                              type=\"password\"\r\n                              margin=\"normal\"\r\n                              required\r\n                              id=\"password\"\r\n                              value={values.password}\r\n                              /* label=\"Password\" */\r\n                              name=\"password\"\r\n                              autoComplete=\"password\"\r\n                              autoFocus\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                            <FormHelperText id=\"component-error-text\">\r\n                              {touched.password ? errors.password : \"\"}\r\n                            </FormHelperText>\r\n                          </FormControl>\r\n                        </Grid>\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox value=\"remember\" color=\"primary\" />\r\n                          }\r\n                          label=\"Remember me\"\r\n                        />\r\n                        <Button\r\n                          type=\"submit\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          className={classes.submit}\r\n                        >\r\n                          Sign In\r\n                        </Button>\r\n                        <Grid container>\r\n                          <Grid item xs>\r\n                            <Link\r\n                              href=\"#\"\r\n                              variant=\"body2\"\r\n                              style={{ textDecoration: \"none\" }}\r\n                            >\r\n                              Forgot password?\r\n                            </Link>\r\n                          </Grid>\r\n                          <Grid item>\r\n                            <Link\r\n                              to={\"/\"}\r\n                              variant=\"body2\"\r\n                              style={{ textDecoration: \"none\" }}\r\n                            >\r\n                              {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Form>\r\n                  );\r\n                }}\r\n              </Formik>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Signup(props) {\r\n  const classes = useStyles();\r\n  const [logingError, setLogingError] = useState(\"\");\r\n\r\n  const initialValues = {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    username: Yup.string()\r\n      .matches(/^[a-z0-9_.]+$/, \"Enter a Valid Username\")\r\n      .trim()\r\n      .min(4, \"Username is Too Short\")\r\n      .max(30, \"Username is Too Long\")\r\n      .lowercase()\r\n      .required(),\r\n    email: Yup.string()\r\n      .email(\"Please Enter A Valid Email\")\r\n      .min(8, \"Please Enter A Valid Email\")\r\n      .max(30, \"Eamil is Too Large\")\r\n      .lowercase()\r\n      .required(\"Email Can Not Be Empty\"),\r\n    password: Yup.string().min(8),\r\n  });\r\n\r\n  const onSubmit = async (values, { resetForm }) => {\r\n    const { username, email, password } = values;\r\n\r\n    const userCredential = await (\r\n      await fetch(\"http://localhost:8000/api/user/signup\", {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username,\r\n          email,\r\n          password,\r\n        }),\r\n      })\r\n    ).json();\r\n    console.log(userCredential);\r\n\r\n    if (userCredential.success) {\r\n      props.history.push(\"/login\");\r\n    } else {\r\n      setLogingError(userCredential.error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image}>\r\n        <Hidden xsDown>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h1\"\r\n            align=\"center\"\r\n            gutterBottom\r\n            style={{ marginTop: \"20vh\", color: \"#222831\" }}\r\n          >\r\n            A Very Simple Chat Application\r\n          </Typography>\r\n          <Typography\r\n            variant=\"h5\"\r\n            align=\"center\"\r\n            color=\"textSecondary\"\r\n            paragraph\r\n          >\r\n            Something short and leading about the application below—its\r\n            contents, the creator, etc. Make it short and sweet, but not too\r\n            short so folks don&apos;t simply skip over it entirely.\r\n          </Typography>\r\n          <Typography\r\n            variant=\"h5\"\r\n            align=\"center\"\r\n            color=\"textSecondary\"\r\n            paragraph\r\n          >\r\n            Developed by : sizarcorpse\r\n          </Typography>\r\n        </Hidden>\r\n      </Grid>\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}\r\n            validateOnChange={false}\r\n            validateOnBlur={false}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                handleChange,\r\n                handleBlur,\r\n              } = props;\r\n              return (\r\n                <Form className={classes.form}>\r\n                  {logingError && (\r\n                    <div className={classes.root2}>\r\n                      <Alert severity=\"error\">{logingError}</Alert>\r\n                    </div>\r\n                  )}\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <FormControl\r\n                        error={touched.username && Boolean(errors.username)}\r\n                        fullWidth\r\n                      >\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          margin=\"normal\"\r\n                          required\r\n                          id=\"username\"\r\n                          value={values.username}\r\n                          label=\"Username\"\r\n                          name=\"username\"\r\n                          autoComplete=\"username\"\r\n                          autoFocus\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                        <FormHelperText id=\"component-error-text\">\r\n                          {touched.username ? errors.username : \"\"}\r\n                        </FormHelperText>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <FormControl\r\n                        error={touched.email && Boolean(errors.email)}\r\n                        fullWidth\r\n                      >\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          margin=\"normal\"\r\n                          required\r\n                          id=\"email\"\r\n                          value={values.email}\r\n                          label=\"Email Address\"\r\n                          name=\"email\"\r\n                          autoComplete=\"email\"\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                        <FormHelperText id=\"component-error-text\">\r\n                          {touched.email ? errors.email : \"\"}\r\n                        </FormHelperText>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <FormControl\r\n                        error={touched.password && Boolean(errors.password)}\r\n                        fullWidth\r\n                      >\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          type=\"password\"\r\n                          margin=\"normal\"\r\n                          required\r\n                          id=\"password\"\r\n                          value={values.password}\r\n                          label=\"Password\"\r\n                          name=\"password\"\r\n                          autoComplete=\"password\"\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                        <FormHelperText id=\"component-error-text\">\r\n                          {touched.password ? errors.password : \"\"}\r\n                        </FormHelperText>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <FormControlLabel\r\n                      control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                      label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                      type=\"submit\"\r\n                      fullWidth\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.submit}\r\n                    >\r\n                      Sign Up\r\n                    </Button>\r\n                    <Grid container>\r\n                      <Grid item xs>\r\n                        <Link\r\n                          href=\"#\"\r\n                          variant=\"body2\"\r\n                          style={{ textDecoration: \"none\" }}\r\n                        >\r\n                          Forgot password?\r\n                        </Link>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Link\r\n                          to={\"/login\"}\r\n                          variant=\"body2\"\r\n                          style={{ textDecoration: \"none\" }}\r\n                        >\r\n                          {\"You have an account? Sign in\"}\r\n                        </Link>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport io from \"socket.io-client\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Input from \"../Input/Input\";\r\nimport Messages from \"../Messages/Messages\";\r\nimport TextContainer from \"../TextContainer/TextContainer\";\r\nimport ScrollToBottom from \"react-scroll-to-bottom\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \"@global\": {\r\n    \"*::-webkit-scrollbar\": {\r\n      width: \"0.4em\",\r\n    },\r\n    \"*::-webkit-scrollbar-track\": {\r\n      \"-webkit-box-shadow\": \"inset 0 0 6px #1b262c\",\r\n    },\r\n    \"*::-webkit-scrollbar-thumb\": {\r\n      backgroundColor: \"#1b262c\",\r\n      outline: \"1px solid slategrey\",\r\n    },\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    backgroundColor: \"#112d4e\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    backgroundColor: \"#2b2e4a\",\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    backgroundColor: \"#2b2e4a\",\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n    backgroundColor: \"#2b2e4a\",\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(1),\r\n    backgroundColor: \"#384259\",\r\n    heigth: \"100%\",\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    borderRadius: \"8px\",\r\n    height: \"86vh\",\r\n    width: \"100%\",\r\n  },\r\n  inputArea: {\r\n    backgroundColor: \"#f7fbfc\",\r\n    margin: 0,\r\n    paddingLeft: \"20x\",\r\n    borderRadius: \"40px\",\r\n    height: \"57px\",\r\n  },\r\n}));\r\n\r\nlet socket;\r\n\r\nfunction Chat({ location }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const [users, setUsers] = useState();\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const ENDPOINT = \"localhost:8000\";\r\n\r\n  //💨💨 handleing connection\r\n  useEffect(() => {\r\n    const { name, room } = queryString.parse(location.search);\r\n\r\n    socket = io(ENDPOINT);\r\n\r\n    setName(name);\r\n    setRoom(room);\r\n\r\n    //1️⃣✅when someone join the connection\r\n    socket.emit(\"join\", { name, room }, (error) => {\r\n      if (error) {\r\n        alert(error);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      //2️⃣❎when someone left the connection\r\n      socket.emit(\"disconnect\");\r\n      socket.off();\r\n    };\r\n  }, [ENDPOINT, location.search]);\r\n  //\r\n  //\r\n  //\r\n  //💨💨 handleing messages\r\n  useEffect(() => {\r\n    //📌 listen message from backend\r\n    socket.on(\"message\", (message) => {\r\n      // this message = playlaod ({ user: \"admin\", text: `${user.name}, has joined !` })\r\n      setMessages([...messages, message]);\r\n      //this setMessages = adding every new messages from admin/bot or any users\r\n    });\r\n\r\n    //📌 listen usersdata from backend\r\n    socket.on(\"roomData\", ({ users }) => {\r\n      setUsers(users);\r\n    });\r\n  }, [messages]);\r\n  //\r\n  //\r\n  //\r\n  //3️⃣💌  hangleing send message\r\n  const sendMessage = (e) => {\r\n    // 📌 this sending chat message to backend for emming to everyone\r\n    e.preventDefault();\r\n\r\n    if (message) {\r\n      socket.emit(\"sendMessage\", message, () => {\r\n        setMessage(\"\");\r\n      });\r\n    }\r\n  };\r\n  //\r\n  //\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = useState(true);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Paper style={{ backgroundColor: \"#2d4059\" }}>\r\n      <Box className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"fixed\"\r\n          className={clsx(classes.appBar, {\r\n            [classes.appBarShift]: open,\r\n          })}\r\n        >\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              edge=\"start\"\r\n              className={clsx(classes.menuButton, {\r\n                [classes.hide]: open,\r\n              })}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" noWrap>\r\n              {room}\r\n            </Typography>\r\n            <Link\r\n              to=\"/home\"\r\n              style={{\r\n                textDecoration: \"none\",\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n                flexGrow: 1,\r\n                marginRight: \"20px\",\r\n                color: \"white\",\r\n              }}\r\n            >\r\n              <ExitToAppIcon />\r\n            </Link>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          className={clsx(classes.drawer, {\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          })}\r\n          classes={{\r\n            paper: clsx({\r\n              [classes.drawerOpen]: open,\r\n              [classes.drawerClose]: !open,\r\n            }),\r\n          }}\r\n        >\r\n          <div className={classes.toolbar}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              {theme.direction === \"rtl\" ? (\r\n                <ChevronRightIcon />\r\n              ) : (\r\n                <ChevronLeftIcon />\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            {users &&\r\n              users.map((user, index) => (\r\n                <ListItem button key={user}>\r\n                  <ListItemIcon>\r\n                    <Avatar alt=\"Remy Sharp\" src={user.profilePhoto} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={user.username} />\r\n                </ListItem>\r\n              ))}\r\n          </List>\r\n          <Divider />\r\n        </Drawer>\r\n\r\n        <main className={classes.content}>\r\n          <div className={classes.container}>\r\n            <Messages messages={messages} name={name} />\r\n          </div>\r\n          <div className={classes.inputArea}>\r\n            <Input\r\n              message={message}\r\n              setMessage={setMessage}\r\n              sendMessage={sendMessage}\r\n            />\r\n          </div>\r\n        </main>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import React from \"react\";\r\n\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst Input = ({message, setMessage, sendMessage}) => (\r\n    <form>\r\n        <FormControl fullWidth style={{padding: \"0px 30px 10px 30px\", height: \"30px\", margin: 0,}}>\r\n            <TextField\r\n                placeholder=\"Type a message\"\r\n                // variant=\"outlined\"\r\n                type=\"text\"\r\n                margin=\"normal\"\r\n                required\r\n                id=\"password\"\r\n                value={message}\r\n                name=\"password\"\r\n                autoFocus\r\n                onChange={(e) => setMessage(e.target.value)}\r\n                onKeyPress={(e) => (e.key === \"Enter\" ? sendMessage(e) : null)}\r\n            />\r\n        </FormControl>\r\n    </form>\r\n);\r\n\r\nexport default Input;\r\n\r\n\r\n// <input\r\n//     className=\"input\"\r\n//     type=\"text\"\r\n//     placeholder=\"Type a message\"\r\n//     value={message}\r\n//     onChange={(e) => setMessage(e.target.value)}\r\n//     onKeyPress={(e) => (e.key === \"Enter\" ? sendMessage(e) : null)}\r\n// />","import React, {useContext} from \"react\";\r\nimport ReactEmoji from \"react-emoji\";\r\nimport {UserContext} from \"../../App\";\r\nimport \"./Message.css\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    mc: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        padding: \"3px\",\r\n        margin: 0,\r\n\r\n    },\r\n    mb: {\r\n        borderRadius: \"20px\",\r\n        padding: \"5px\",\r\n        color: \"black\",\r\n        display: \"flex\",\r\n        maxWidth: \"80%\",\r\n        background: \" #e5e5e5\"\r\n    },\r\n    mt: {\r\n        width: \"100%\",\r\n        letterSpacing: 0,\r\n        fontSize: \"1.1em\",\r\n        wordWrap: \"break-word\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        paddingLeft:\"10px\",\r\n        marginRight:\"20px\"\r\n    },\r\n    mc2: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-start\",\r\n        padding: \"3px\",\r\n        margin: 0,\r\n\r\n    },\r\n    mc3: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-center\",\r\n        padding: \"3px\",\r\n        margin: 0,\r\n\r\n    },\r\n\r\n}));\r\n\r\n\r\nconst Message = ({message: {ruser, text, profilePhoto}, name}) => {\r\n    const [user, setUser] = useContext(UserContext);\r\n\r\n    const classes = useStyles();\r\n\r\n    let isSentByCurrentUser = false;\r\n    if (user.username === ruser) {\r\n        isSentByCurrentUser = true;\r\n    }\r\n\r\n\r\n    return isSentByCurrentUser ? (\r\n        <Box className={classes.mc}>\r\n\r\n            <Box className={classes.mb}>\r\n\r\n                <Typography className={classes.mt}>\r\n                    {ReactEmoji.emojify(text)}\r\n                </Typography>\r\n                {profilePhoto && (<Avatar\r\n                    style={{justifyContent: \"center\"}}\r\n                    alt=\"Remy Sharp\"\r\n                    src={profilePhoto}\r\n                />)}\r\n            </Box>\r\n        </Box>\r\n    ) : (\r\n\r\n        <Box className={classes.mc2}>\r\n            <Box className={classes.mb}>\r\n                {profilePhoto && (<Avatar\r\n                    style={{justifyContent: \"center\"}}\r\n                    alt=\"Remy Sharp\"\r\n                    src={profilePhoto}\r\n                />)}\r\n                <Typography className={classes.mt}>\r\n                    {ReactEmoji.emojify(text)}\r\n                </Typography>\r\n\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Message;\r\n\r\n\r\n// return isSentByCurrentUser ? (\r\n//     <div className=\"messageContainer justifyEnd\">\r\n//         <p className=\"sentText pr-10\">{ruser}</p>\r\n//         <div className=\"messageBox backgroundBlue\">\r\n//             <p className=\"messageText colorWhite\">{ReactEmoji.emojify(text)}</p>\r\n//         </div>\r\n//         {profilePhoto && (<Avatar\r\n//             style={{justifyContent: \"center\"}}\r\n//             alt=\"Remy Sharp\"\r\n//             src={profilePhoto}\r\n//         />)}\r\n//     </div>\r\n// ) : (\r\n//     <div className=\"messageContainer justifyStart\">\r\n//         <div className=\"messageBox backgroundLight\">\r\n//             <p className=\"messageText colorDark\">{ReactEmoji.emojify(text)}</p>\r\n//         </div>\r\n//         <p className=\"sentText pl-10 \">{ruser}</p>\r\n//         <Avatar\r\n//             alt=\"Remy Sharp\"\r\n//             src={profilePhoto}\r\n//         />\r\n//     </div>\r\n// );","import React from \"react\";\r\nimport ScrollToBottom from \"react-scroll-to-bottom\";\r\n\r\nimport \"./Messages.css\";\r\nimport Message from \"../Message/Message\";\r\n\r\nconst Messages = ({messages, name}) => (\r\n    <ScrollToBottom className=\"messages\" >\r\n        {messages.map((message, i) => (\r\n            <div key={i}>\r\n                <Message message={message} name={name}/>\r\n            </div>\r\n        ))}\r\n    </ScrollToBottom>\r\n);\r\n\r\nexport default Messages;\r\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport AuthRoute from \"./util/AuthRoute\";\r\n\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nimport Nav from \"./components/Nav/Nav\";\r\nimport Home from \"./components/Home/Home\";\r\nimport Login from \"./components/Login/Login\";\r\nimport Signup from \"./components/Signup/Signup\";\r\n\r\nimport Chat from \"./components/Chat/Chat\";\r\n\r\n// import NotFound from \"./components/NotFound/NotFound\";\r\n\r\nexport const UserContext = createContext([]);\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    async function getRefreshToken() {\r\n      const userCredential = await (\r\n        await fetch(\"http://localhost:8000/api/user/refreshtoken\", {\r\n          method: \"POST\",\r\n          credentials: \"include\", // Needed to include the cookie\r\n          withCredentials: true,\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Credentials\": true,\r\n          },\r\n        })\r\n      ).json();\r\n\r\n      if (userCredential.accesstoken) {\r\n        const { username, email, profilePhoto } = jwtDecode(\r\n          userCredential.accesstoken\r\n        );\r\n        setUser({\r\n          accesstoken: userCredential.accesstoken,\r\n          isAuthenticated: true,\r\n          username: username,\r\n          email: email,\r\n          profilePhoto: profilePhoto,\r\n        });\r\n        setLoading(false);\r\n      } else {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    getRefreshToken();\r\n    console.log(\"----------------------------from app\");\r\n  }, []);\r\n\r\n  if (loading) return <div>Loding...</div>;\r\n\r\n  return (\r\n    <UserContext.Provider value={[user, setUser]}>\r\n      <Router>\r\n        <Route path=\"/\" component={Nav} />\r\n        <Switch>\r\n          <AuthRoute\r\n            path=\"/home\"\r\n            exact\r\n            component={Home}\r\n            isAuthenticated={user.isAuthenticated}\r\n          />\r\n          <AuthRoute\r\n            path=\"/Chat\"\r\n            exact\r\n            component={Chat}\r\n            isAuthenticated={user.isAuthenticated}\r\n          />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/\" exact component={Signup} />\r\n        </Switch>\r\n      </Router>\r\n    </UserContext.Provider>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}